---
# This is an example playbook to execute Ansible tests.
- name: Verify
  hosts: all:!nodered
  connection: local
  gather_facts: no
  become: no
  vars:
    ansible_connection: local
    ansible_shell_type: sh
  tasks:
    - name: Include vars file
      ansible.builtin.include_vars:
        file: "{{ item }}"
      loop:
        - ./vars/main.yml
        - ../../../setup/defaults/main.yml

    - name: Set Portainer url
      ansible.builtin.set_fact:
        portainer_url: "https://{{ ansible_host }}:{{ portainer_port | default(portainer_port_default) }}"

    - name: Get jwt token
      ansible.builtin.uri:
        url: "{{ portainer_url }}/api/auth"
        method: POST
        body_format: json
        body:
          username: "admin"
          password: "{{ portainer_admin_password | default(portainer_admin_password_default) }}"
        validate_certs: false
      register: get_jwt_token_response

    - name: Get endpoints
      ansible.builtin.uri:
        url: "{{ portainer_url }}/api/endpoints?name=primary"
        method: GET
        headers:
          Authorization: "Bearer {{ get_jwt_token_response.json.jwt }}"
        validate_certs: false
      register: get_endpoints_result

    - name: Set Primary endpoint var
      ansible.builtin.set_fact:
        portainer_endpoint: "{{ get_endpoints_result.json | first }}"

    - name: Get Stacks
      ansible.builtin.uri:
        url: "{{ portainer_url }}/api/stacks"
        method: GET
        headers:
          Authorization: "Bearer {{ get_jwt_token_response.json.jwt }}"
        validate_certs: false
      register: get_stacks_result

    - name: Set Stacks var
      ansible.builtin.set_fact:
        stacks: "{{ get_stacks_result.json }}"

    - name: Assert stacks.length == 1 and name of stack equals service_id
      ansible.builtin.assert:
        that:
          - stacks | length == 0
